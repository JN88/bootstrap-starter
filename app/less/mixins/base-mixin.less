//
// BASE MIXINS
// --------------------------------------------------
// Init Hook Mixins
.hook-common-style(){};
.hook-screen-sm-min(){};
.hook-screen-md-min(){};
.hook-screen-lg-min(){};
.hook-screen-md-max(){};
.hook-screen-sm-max(){};
.hook-screen-xs-max(){};

//
// MIXINS: Add any css property
// --------------------------------------------------
.css3(
	@_property,
	@_value,
	@_prefix: true
) when (@_prefix = true)
	and not (@_value = '')
	and not (@_value = false)
	and not (extract(@_value, 1) = false)
	and not (extract(@_value, 2) = false)
	and not (extract(@_value, 3) = false)
	and not (extract(@_value, 4) = false)
	and not (extract(@_value, 5) = false) {
		-webkit-@{_property}: @_value;
		-moz-@{_property}: @_value;
		-ms-@{_property}: @_value;
}
.css3(
	@_property,
	@_value,
	@_prefix: true
) when not (@_value = '')
	and not (@_value = false)
	and not (extract(@_value, 1) = false)
	and not (extract(@_value, 2) = false)
	and not (extract(@_value, 3) = false)
	and not (extract(@_value, 4) = false)
	and not (extract(@_value, 5) = false) {
		@{_property}: @_value;
}

//
// MIXIN: Mixins for this Project
// --------------------------------------------------
//
// MIXIN: Set Postion
// --------------------------------------------------
.pos-left-top(@position: absolute){
	position: @position;
	top: 0;
	left: 0;
}
.pos-left-bottom(@position: absolute){
	position: @position;
	bottom: 0;
	left: 0;
}
.pos-right-top(@position: absolute){
	position: @position;
	top: 0;
	right: 0;
}
.pos-right-bottom(@position: absolute){
	position: @position;
	bottom: 0;
	right: 0;
}

.pos-center-center(@position: absolute){
	position: @position;
	top: 50%;
	left: 50%;
	.translate(-50%, -50%);
}
.pos-center-top(@position: absolute){
	position: @position;
	top: 0;
	left: 50%;
	.translate(-50%, 0);
}
.pos-center-bottom(@position: absolute){
	position: @position;
	bottom: 0;
	left: 50%;
	.translate(-50%, 0);
}

.pos-left-center(@position: absolute){
	position: @position;
	left: 0;
	top: 50%;
	.translate(0, -50%);
}
.pos-right-center(@position: absolute){
	position: @position;
	right: 0;
	top: 50%;
	.translate(0, -50%);
}


// MIXIN: Set Margin And Padding
// --------------------------------------------------
//== Margin
.margin-h(@value) {
	margin-top: @value;
	margin-bottom: @value;
}
.margin-h(@top, @bottom) {
	margin-top: @top;
	margin-bottom: @bottom;
}
.margin-v(@value) {
	margin-left: @value;
	margin-right: @value;
}
.margin-v(@left, @right) {
	margin-left: @left;
	margin-right: @right;
}
//== Padding
.padding-h(@value) {
	padding-top: @value;
	padding-bottom: @value;
}
.padding-h(@top, @bottom) {
	padding-top: @top;
	padding-bottom: @bottom;
}
.padding-v(@value) {
	padding-left: @value;
	padding-right: @value;
}
.padding-v(@left, @right) {
	padding-left: @left;
	padding-right: @right;
}

// MIXIN: Set Link Color
// --------------------------------------------------
.link-color(@color: @link-color, @colorHover: @link-hover-color){
	color: @color;
	&:hover {
		color: @colorHover;
	}
}

// MIXIN: Genarate single icon form Spritesmith
// --------------------------------------------------
.export-sprite-icon(@icon-name) {
	@with: ~'@{icon-name}-width';
	@height: ~'@{icon-name}-height';
	@total-width: ~'@{icon-name}-total-width';
	@total-height: ~'@{icon-name}-total-height';
	@background-image: ~'@{icon-name}-image';
	@background-2x-image: ~'@{icon-name}-2x-image';
	@x: ~'@{icon-name}-offset-x';
	@y: ~'@{icon-name}-offset-y';
	display: inline-block;
	content: "";
	width: @@with;
	height: @@height;
	background: url(@@background-image) no-repeat @@x @@y transparent;

	@media
	only screen and (-webkit-min-device-pixel-ratio: 2),
	only screen and (   min--moz-device-pixel-ratio: 2),
	only screen and (     -o-min-device-pixel-ratio: 2/1),
	only screen and (        min-device-pixel-ratio: 2),
	only screen and (                min-resolution: 192dpi),
	only screen and (                min-resolution: 2dppx) {
		background-image: url(@@background-2x-image);
		background-size: @@total-width @@total-height;
	}
}